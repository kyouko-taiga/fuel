func factorial(n) : (Int32) -> Int32 {
  _0 = salloc Int32
  _1 = call le_Int32, n, 1
  if _1 {
    store 1, _0
  } else {
    _2 = call sub_Int32, n, 1
    _3 = call factorial, _2
    _4 = call mul_Int32, n, _3
    store _4, _0
  }
  _5 = load _0
  return _5
}

func main() : () -> Int32 {
  _0 = call factorial, 3
  return _0
}

func factorial(n, a) : (Int32, Int32) -> Int32 {
  _0 = salloc Int32
  _1 = call eq_Int32, n, 0
  if _1 {
    store a, _0
  } else {
    _2 = call sub_Int32, n, 1
    _3 = call mul_Int32, n, a
    _4 = call factorial, _2, _3
    store _4, _0
  }
  _5 = load _0
  return _5
}

func main() : () -> Int32 {
  _0 = call factorial, 3, 1
  return _0
}
